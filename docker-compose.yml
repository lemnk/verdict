version: '3.8'

services:
  # Development services
  app:
    build: .
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://verdictvault:password@db:5432/verdictvault
      - REDIS_URL=redis://redis:6379
    depends_on:
      - db
      - redis
    volumes:
      - ./uploads:/app/uploads
      - ./.env:/app/.env:ro
    networks:
      - verdictvault-network
    profiles:
      - dev

  # Production services
  api:
    build: .
    environment:
      - DATABASE_URL=postgresql://verdictvault:password@db:5432/verdictvault
      - REDIS_URL=redis://redis:6379
    depends_on:
      - db
      - redis
    volumes:
      - ./uploads:/app/uploads
      - ./.env:/app/.env:ro
    networks:
      - verdictvault-network
    profiles:
      - prod
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  web:
    build:
      context: ./deploy/nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      api:
        condition: service_healthy
    volumes:
      - ./frontend/dist:/usr/share/nginx/html:ro
    networks:
      - verdictvault-network
    profiles:
      - prod
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  db:
    image: postgres:15
    environment:
      - POSTGRES_DB=verdictvault
      - POSTGRES_USER=verdictvault
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - verdictvault-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U verdictvault -d verdictvault"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - verdictvault-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
  redis_data:

networks:
  verdictvault-network:
    driver: bridge